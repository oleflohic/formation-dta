<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.pizzeria</groupId>
	<artifactId>pizzeria-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	
	<modules>
	<!-- nom des REPERTOIRES de projets enfants -->
		<module>pizzeria-model</module> 
		<module>pizzeria-dao</module>
		<module>pizzeria-console-objet</module>
	</modules>
	
	<properties>
		<!-- propriété reconnue par Maven : force l'encodage du programme -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<!-- autre propriété Maven -->
		<java.source>1.8</java.source>
		<java.target>1.8</java.target>
		
		<!-- définition de variables qui sont réutilisées dans le bloc <dependencies> -->
		<junit.version>4.12</junit.version> 
		<system.rules.version>1.16.0</system.rules.version>
		
		<commons.lang.version>3.4</commons.lang.version>
	</properties>
	
	<dependencyManagement>
	<!-- dependencyManagement => lister les dépendances POTENTIELLES ;
	elles ne seront pas forcément toutes utilisées par les projets enfants -->
		<dependencies>
			
			<dependency>
				<groupId>fr.pizzeria</groupId>
				<artifactId>pizzeria-model</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>fr.pizzeria</groupId>
				<artifactId>pizzeria-dao</artifactId>
				<version>${project.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.4</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.github.stefanbirkner</groupId>
				<artifactId>system-rules</artifactId>
				<version>${system.rules.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<scope>compile</scope>
			</dependency>
			
		</dependencies>
	</dependencyManagement>
	
	<build>
		<finalName>pizzeria-parent</finalName>
		
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>${java.source}</source>
						<target>${java.target}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<configuration>
						<archive>
							<manifest>
								<mainClass>fr.pizzeria.console.PizzeriaAdminConsoleApp</mainClass>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>3.0.0</version>
				
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>package</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				
			</plugins>
			
			
		</pluginManagement>
		
		<!--
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions> exécution systématique lors de la commande "mvn clean package" ce qui permet de s'assurer de l'inclusion du plugin dans l'uber-jar
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<artifactSet>
								<excludes>
									<exclude>junit:junit</exclude>
								</excludes>
							</artifactSet>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		 -->
		
	</build>
	
	<!-- 
	<dependencies>
		<dependency>
			<groupId>fr.pizzeria</groupId>
			<artifactId>pizzeria-model</artifactId>
		</dependency>
		<dependency>
			<groupId>fr.pizzeria</groupId>
			<artifactId>pizzeria-dao</artifactId>
		</dependency>
	</dependencies>
	-->
</project>